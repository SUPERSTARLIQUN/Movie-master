<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.MovieSceneMapper">
  <resultMap id="BaseResultMap" type="com.entity.MovieScene">
    <!--@mbg.generated-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cinema_movie_middle_id" jdbcType="INTEGER" property="cinemaMovieMiddleId" />
    <result column="projection_time" jdbcType="VARCHAR" property="projectionTime" />
    <result column="projection_hall" jdbcType="VARCHAR" property="projectionHall" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, cinema_movie_middle_id, projection_time, projection_hall, money, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from movie_scene
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from movie_scene
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.entity.MovieScene" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into movie_scene (cinema_movie_middle_id, projection_time, 
      projection_hall, money, create_time
      )
    values (#{cinemaMovieMiddleId,jdbcType=INTEGER}, #{projectionTime,jdbcType=VARCHAR}, 
      #{projectionHall,jdbcType=VARCHAR}, #{money,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.entity.MovieScene" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into movie_scene
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cinemaMovieMiddleId != null">
        cinema_movie_middle_id,
      </if>
      <if test="projectionTime != null">
        projection_time,
      </if>
      <if test="projectionHall != null">
        projection_hall,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cinemaMovieMiddleId != null">
        #{cinemaMovieMiddleId,jdbcType=INTEGER},
      </if>
      <if test="projectionTime != null">
        #{projectionTime,jdbcType=VARCHAR},
      </if>
      <if test="projectionHall != null">
        #{projectionHall,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.MovieScene">
    <!--@mbg.generated-->
    update movie_scene
    <set>
      <if test="cinemaMovieMiddleId != null">
        cinema_movie_middle_id = #{cinemaMovieMiddleId,jdbcType=INTEGER},
      </if>
      <if test="projectionTime != null">
        projection_time = #{projectionTime,jdbcType=VARCHAR},
      </if>
      <if test="projectionHall != null">
        projection_hall = #{projectionHall,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.MovieScene">
    <!--@mbg.generated-->
    update movie_scene
    set cinema_movie_middle_id = #{cinemaMovieMiddleId,jdbcType=INTEGER},
      projection_time = #{projectionTime,jdbcType=VARCHAR},
      projection_hall = #{projectionHall,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findScene" resultMap="BaseResultMap">
        SELECT
            *
        FROM
            movie_scene
        WHERE
            cinema_movie_middle_id IN ( SELECT id FROM `cinema_movie_middle` AS cmm
            <where>
                <if test="param1 != null">
                  movie_id = #{param1,jdbcType=INTEGER}
                </if>
              <if test="param2 != null">
                AND cinema_id = #{param2,jdbcType=INTEGER}
              </if>
            </where> )
  </select>
  <select id="findSceneByMovie" resultType="java.util.HashMap">
        SELECT
            mi.id,
            mi.movie_img_url,
            mi.movie_name,
            ms.projection_time,
            ms.money
        FROM
            `movie_scene` AS ms
            LEFT JOIN cinema_movie_middle AS cmm ON cmm.id = ms.cinema_movie_middle_id
            LEFT JOIN movie_info AS mi ON mi.id = cmm.movie_id
            WHERE ms.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="findSceneList" resultType="java.lang.String">
      SELECT
          array
      FROM
          scene_seat_middle AS ssm
          LEFT JOIN already_purchased AS ap ON ssm.id = ap.scene_seat_middle_id
      WHERE
          ssm.seat_id =#{id,jdbcType=INTEGER}
  </select>
    <select id="findScenePage" parameterType="com.entity.MovieScene" resultType="java.util.HashMap" >
        SELECT
            ms.id,
            c.cinema_name,
            mi.movie_name,
            ms.projection_hall,
            ms.projection_time,
            ms.money,
            ms.create_time
        FROM
            movie_scene AS ms
            LEFT JOIN cinema_movie_middle AS cmm ON cmm.id = ms.cinema_movie_middle_id
            LEFT JOIN cinema AS c ON c.id = cmm.cinema_id
            LEFT JOIN movie_info AS mi ON mi.id = cmm.movie_id
    </select>
    <select id="middleDropDown" resultType="java.util.HashMap">
        SELECT
             cmm.id,
             mi.movie_name,
             cinema.cinema_name
        FROM
            cinema_movie_middle AS cmm
            LEFT JOIN movie_info AS mi ON mi.id = cmm.movie_id
            LEFT JOIN cinema ON cinema.id = cmm.cinema_id
    </select>

</mapper>