<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.OrderInfoMapper">
  <resultMap id="BaseResultMap" type="com.entity.OrderInfo">
    <!--@mbg.generated-->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="scene_id" jdbcType="INTEGER" property="sceneId" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="seat_number" jdbcType="VARCHAR" property="seatNumber" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="number" jdbcType="DOUBLE" property="number" />
    <result column="stauts" jdbcType="VARCHAR" property="stauts" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_id, scene_id, price, seat_number, create_time, `number`, stauts
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultType="java.util.HashMap">
     SELECT
       movie_info.movie_name,
       movie_scene.projection_time,
       cinema.cinema_name,
       movie_scene.projection_hall,
       order_info.seat_number,
       order_info.price
    FROM
        `order_info`
        LEFT JOIN movie_scene ON movie_scene.id = order_info.scene_id
        LEFT JOIN cinema_movie_middle ON movie_scene.cinema_movie_middle_id = cinema_movie_middle.id
        LEFT JOIN cinema ON cinema.id = cinema_movie_middle.cinema_id
        LEFT JOIN movie_info ON movie_info.id = cinema_movie_middle.movie_id
    WHERE
        order_info.id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--@mbg.generated-->
    delete from order_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.entity.OrderInfo" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into order_info (user_id, scene_id, price, 
      seat_number, create_time, `number`, 
      stauts)
    values (#{userId,jdbcType=INTEGER}, #{sceneId,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, 
      #{seatNumber,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{number,jdbcType=DOUBLE}, 
      #{stauts,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.entity.OrderInfo">
    <!--@mbg.generated-->
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="sceneId != null">
        scene_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="seatNumber != null">
        seat_number,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="stauts != null">
        stauts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="sceneId != null">
        #{sceneId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="seatNumber != null">
        #{seatNumber,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null">
        #{number,jdbcType=DOUBLE},
      </if>
      <if test="stauts != null">
        #{stauts,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.OrderInfo">
    <!--@mbg.generated-->
    update order_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="sceneId != null">
        scene_id = #{sceneId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="seatNumber != null">
        seat_number = #{seatNumber,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null">
        `number` = #{number,jdbcType=DOUBLE},
      </if>
      <if test="stauts != null">
        stauts = #{stauts,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.OrderInfo">
    <!--@mbg.generated-->
    update order_info
    set user_id = #{userId,jdbcType=INTEGER},
      scene_id = #{sceneId,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      seat_number = #{seatNumber,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      `number` = #{number,jdbcType=DOUBLE},
      stauts = #{stauts,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateStauts">
        UPDATE order_info
        SET stauts = #{param2,jdbcType=INTEGER}
        WHERE
            id = #{param1,jdbcType=VARCHAR}
  </update>
  <select id="findOrderPage" resultMap="BaseResultMap">
    SELECT * FROM order_info
  </select>
  <select id="findByUserOrder" resultType="java.util.HashMap">
       SELECT
            order_info.id,
            movie_info.movie_name,
            movie_scene.projection_time,
            cinema.cinema_name,
            movie_scene.projection_hall,
            order_info.seat_number,
            movie_info.movie_img_url,
            order_info.price,
            order_info.create_time,
            order_info.stauts
        FROM
            `order_info`
            LEFT JOIN movie_scene ON movie_scene.id = order_info.scene_id
            LEFT JOIN cinema_movie_middle ON movie_scene.cinema_movie_middle_id = cinema_movie_middle.id
            LEFT JOIN cinema ON cinema.id = cinema_movie_middle.cinema_id
            LEFT JOIN movie_info ON movie_info.id = cinema_movie_middle.movie_id
            WHERE
            order_info.user_id = #{userId,jdbcType=INTEGER}
            ORDER BY order_info.create_time DESC
  </select>
  <select id="findOrderTime" resultType="java.util.HashMap">
        SELECT
            movie_scene.projection_time,
            order_info.id
        FROM
            order_info
            LEFT JOIN movie_scene ON order_info.scene_id = movie_scene.id
            WHERE user_id = #{id,jdbcType=INTEGER}
  </select>

</mapper>